@using BookTracker.Models
@inject IJSRuntime jsRuntime
@inject IBookService bookService
@inject NavigationManager NavigationManager
@inject StateContainer stateContainer

<div class="book-actions">
    <button class="border-0" title="Edit" @onclick="EditBook">
        <span class="e-icons e-edit text-info"></span>
    </button>
    <button class="border-0" title="Delete" @onclick="DeleteBook">
        <span class="e-icons e-trash text-danger"></span>
    </button>
</div>

@code {
    [Parameter] public Book? Book { get; set; }
    [Parameter] public EventCallback OnUpdated { get; set; }

    private async Task EditBook()
    {
        if (Book == null)
            return;
        stateContainer.ObjectTunnel.Add(Book.GetHashCode(), Book);
        NavigationManager.NavigateTo($"addbook/{Book.GetHashCode()}");
    }

    private async Task DeleteBook()
    {
        if (Book == null)
            return;
        bool confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this book?");
        if (!confirm)
            return;

        var result = await bookService.DeleteBookAsync(Book.Id);
        await OnUpdated.InvokeAsync();
    }
}

